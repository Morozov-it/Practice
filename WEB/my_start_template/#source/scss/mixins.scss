@mixin anim($time, $delay) {
	-webkit-transition: all $time ease $delay;
	-moz-transition: all $time ease $delay;
	-ms-transition: all $time ease $delay;
	-o-transition: all $time ease $delay;
	transition: all $time ease $delay;}

@mixin rotate($deg) {
	-moz-transform: rotate($deg);
	-ms-transform: rotate($deg);
	-webkit-transform: rotate($deg);
	-o-transform: rotate($deg);
	transform: rotate($deg);}

@mixin cnt {
	display: flex;
	align-items: center;
	justify-content: center;}

@mixin tr($x, $y, $z) {
	transform: translate3d($x, $y, $z);
	-webkit-transform: translate3d($x, $y, $z);
	-ms-transform: translate3d($x, $y, $z);
	-o-transform: translate3d($x, $y, $z);
	-moz-transform: translate3d($x, $y, $z);}

@mixin flexbox() {
	display: -webkit-box;
	display: -moz-box;
	display: -ms-flexbox;
	display: -webkit-flex;
	display: flex;
	font-size: 0;}

@mixin flexboxinline() {
	display: -webkit-inline-flex;
	display: -moz-inline-flex;
	display: -ms-inline-flex;
	display: -o-inline-flex;
	display: inline-flex;}


//ADAPTIVE=====================================================================================================
@mixin adaptiv-font($pcSize, $mobSize) {
	$addSize: $pcSize - $mobSize;
	$maxWidth: $maxWidth - 320;
	font-size: calc(#{$mobSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidth}));}
// @include adaptiv-font(44, 20);

@mixin adaptiv-margin($pcSize1m,$mobSize1m, $pcSize2m,$mobSize2m, $pcSize3m,$mobSize3m, $pcSize4m,$mobSize4m) {
	$maxWidth: $maxWidth - 320;
	$addSize1m: $pcSize1m - $mobSize1m;
	$margin1: calc(#{$mobSize1m + px} + #{$addSize1m} * ((100vw - 320px) / #{$maxWidth}));
	$addSize2m: $pcSize2m - $mobSize2m;
	$margin2: calc(#{$mobSize2m + px} + #{$addSize2m} * ((100vw - 320px) / #{$maxWidth}));
	$addSize3m: $pcSize3m - $mobSize3m;
	$margin3: calc(#{$mobSize3m + px} + #{$addSize3m} * ((100vw - 320px) / #{$maxWidth}));
	$addSize4m: $pcSize4m - $mobSize4m;
	$margin4: calc(#{$mobSize4m + px} + #{$addSize4m} * ((100vw - 320px) / #{$maxWidth}));
	margin: $margin1 $margin2 $margin3 $margin4;}
// @include adaptiv-margin(50,10, 20,5, 50,10, 20,5);

@mixin adaptiv-padding($pcSize1p,$mobSize1p, $pcSize2p,$mobSize2p, $pcSize3p,$mobSize3p, $pcSize4p,$mobSize4p) {
	$maxWidth: $maxWidth - 320;
	$addSize1p: $pcSize1p - $mobSize1p;
	$padding1: calc(#{$mobSize1p + px} + #{$addSize1p} * ((100vw - 320px) / #{$maxWidth}));
	$addSize2p: $pcSize2p - $mobSize2p;
	$padding2: calc(#{$mobSize2p + px} + #{$addSize2p} * ((100vw - 320px) / #{$maxWidth}));
	$addSize3p: $pcSize3p - $mobSize3p;
	$padding3: calc(#{$mobSize3p + px} + #{$addSize3p} * ((100vw - 320px) / #{$maxWidth}));
	$addSize4p: $pcSize4p - $mobSize4p;
	$padding4: calc(#{$mobSize4p + px} + #{$addSize4p} * ((100vw - 320px) / #{$maxWidth}));
	padding: $padding1 $padding2 $padding3 $padding4;}
// @include adaptiv-padding(30,10, 20,10, 30,10, 20,10);
//==============================================================================================================

//Адаптивное свойство
// $maxWidth: 1920;
// $maxWidthContainer: 1170;
@mixin adaptiv-value($property, $startSize, $minSize, $type) {
	$addSize: $startSize - $minSize;
	@if $type==1 {
		//Только если меньше контейнера
		#{$property}: $startSize + px;
		@media (max-width: #{$maxWidthContainer + px}) {
			#{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidthContainer - 320}));
		}
	} @else if $type==2 {
		//Только если больше контейнера
		#{$property}: $startSize + px;
		@media (min-width: #{$maxWidthContainer + px}) {
			#{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidth - 320}));
		}
	} @else {
		//Всегда
		#{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidth - 320}));
	}
}
// @include adaptiv-value("padding", 50, 20, 0);
// padding: calc(20px + (50 - 20) * ((100vw - 320px) / (1600 - 320)));